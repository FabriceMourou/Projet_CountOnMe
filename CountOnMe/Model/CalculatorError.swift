//
//  CalculatorError.swift
//  CountOnMe
//
//  Created by Fabrice Mourou on 21/08/2020.
//  Copyright ¬© 2020 Vincent Saluzzo. All rights reserved.
//

import UIKit

enum CalculatorError: Error {
    case cannotAddOperatorAfterAnotherOperator
    case cannotDivideByZero
    case expressionIsIncorrect
    case expressionHasNotEnoughElement
    case cannotAddOperatorIfOperationEmpty
    case cannotFormatInvalidStringNumber
    case failedToFormatFinalResult
    case cannotGetLeftAndRightNumberForOperationUnit
    case cannotConvertSymbolIntoMathOperator
//    case cannotGetFinalResult

    var errorMessage: String {
        switch self {
        case .cannotAddOperatorAfterAnotherOperator: return " Un operateur est d√©ja mis üî¢ !"
        case .cannotDivideByZero: return " Vous ne pouvez pas diviser par z√©ro ‚ùå  ! "
        case .expressionIsIncorrect: return "Entrez une expression correcte ‚õîÔ∏è !"
        case .expressionHasNotEnoughElement: return "L'op√©ration n'a pas assez d'√©l√©ments üõ† !"
        case .cannotAddOperatorIfOperationEmpty: return "Vous ne pouvez pas commencer par un op√©rateur üî¢ !"
        case .cannotFormatInvalidStringNumber: return "cannotFormatInvalidStringNumber"
        case .failedToFormatFinalResult: return "Le resultat final ne peut pas √™tre afficher ‚ùå !"
        case .cannotGetLeftAndRightNumberForOperationUnit: return "Impossible d'obtenir les chiffres üõ† !"
        case .cannotConvertSymbolIntoMathOperator: return "Impossible de convertir le symbole en op√©rateur math√©matique ‚ùå !"
//        case .cannotGetFinalResult: return "cannotGetFinalResult"
        }
    }
}
